plugins {
    id 'application'

    // Spring
    id 'org.springframework.boot' version '2.3.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'

    // adoc 파일 관리
    id 'org.asciidoctor.convert' version '2.4.0'
}

version = '2022.11'
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // AssertJ
    testImplementation 'org.assertj:assertj-core:3.18.1'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // Jackson for JSON.
    implementation 'com.fasterxml.jackson.core:jackson-core:2.11.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.3'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'

    // DozerMapper
    implementation 'com.github.dozermapper:dozer-core:6.4.0'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtime 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtime 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    // Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Spring Data JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Database
    runtimeOnly 'com.h2database:h2'
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.2'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Spring Developer Tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Spring Boot Test
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // Spring REST Docs
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

application {
    // Define the main class for the application.
    mainClass = 'com.codesoom.assignment.App'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}

ext {
    snippetsDir = file('build/generated-snippets')
}

asciidoctor {
    // test => asciidoctor 실행
    inputs.dir snippetsDir
    dependsOn test
}

asciidoctor.doFirst {
    // 이전에 생성한 문서 제거
    delete file('src/main/resources/static/docs')
}

bootJar {
    // asciidoctor => bootJar 실행
    dependsOn asciidoctor
    copy {
        from "${asciidoctor.outputDir}/html5"
        into 'src/main/resources/static/docs'
    }
    finalizedBy 'copyDocument'
}

task copyDocument(type: Copy) {
    // API doc 파일 => docs/index.html으로 접근 가능
    dependsOn bootJar
    from file("build/asciidoc/html5/")
    into file("src/main/resources/static/docs")
}
